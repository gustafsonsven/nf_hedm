analysis_name: ti_sample_7 # The name you want all your output files to have within thier filename (relevant to the sample)

main_directory: '/nfs/chess/user/seg246/software/development_working_space/' # Starting path for detector and materials file, if None this will default to working directory.
output_directory: '/nfs/chess/scratch/user/seg246/development_working_space/output' # Path to save all output files, if None this will default to main_directory

input_files:
  detector_file: retiga_capolungo-3850-a.yml # Your detector file, if full path is not provided, will default to looking in main_directory
  materials_file: materials.h5 # Your materials file, if full path is not provided, will default to looking in main_directory
  grains_out_file: '/nfs/chess/aux/cycles/2023-3/id3a/capolungo-3850-a/reduced_data/ti_7/reconstructions/ff/output_files/10/grains.out' # Your grains.out file, if full path is not provided, will default to looking in main_directory

# Do you want plots to show?
output_plot_check: True

experiment:
  # Incoming beam information
  beam_energy: 41.991 # keV
  beam_vertical_span: [-0.085, 0.085] # mm

  # Material information
  material_name: ti # Must be a material name stored in your materials file
  point_group_number: 27 # Note: this is point group not space group - check nfutil for list
  max_tth: None # Degrees or None - Will clip tth

  # Completness and chi^2 thesholds to trim the quality of fitted grains from the grains.out file
  comp_thresh: 0.5 # Value [0.0 1.0] or None to ignore completness
  chi2_thresh: 0.005 # Value [0.0 1.0] or None to ignore chi^2

  images_and_omegas:
    # Omega handling - omega edges will be automatically searched for, if they are not found the below start and stop will be used
      # and an even omega spacing will be generated
    omega_start: 0.0 # Degrees
    omega_stop: 360.0  # Degrees
    shift_images_in_omega: -1 # Integer to shift images postive or negative through omega

tomography:
  # If you are running tomography in CHAP then none of this section will be used
  # Load images and process tomography mask (depreciated version)
  img_stem: nf_
  num_digits: 5
  bright:
    folder: /nfs/chess/raw/2017-2/f2/rollett-628-1/ti7-1/7/nf/ #defaults to data_folder
    img_start: 62
    num_imgs: 50
  dark:
    folder: /nfs/chess/raw/2017-2/f2/rollett-628-1/ti7-1/6/nf/ #defaults to data_folder
    img_start: 6
    num_imgs: 50
  images:
    folder: /nfs/chess/raw/2017-2/f2/rollett-628-1/ti7-1/8/nf/
    img_start: 118
    num_imgs: 3600
  ome_start: 0.0 #degrees
  ome_end: 359.75

  #Don't change these unless you know what you are doing, this will close small holes
  #and remove noise
  processing:
    recon_thresh: 0.0002 #usually varies between 0.0001 and 0.0005
    noise_obj_size: 500
    min_hole_size: 500
    erosion_iter: 1
    dilation_iter: 1

NF_images:
  # Sample raw data directory - could be of the form: '/nfs/chess/raw/[cycle ID]/[beamline]/BTR/sample'
  sample_raw_data_folder: '/nfs/chess/raw/2023-3/id3a/capolungo-3850-a/ti_7'

  image_loading:
    # A metadata file (.par and .json) will be looked for by default
      # If none is found images will be loaded directly
    # Metadata Paramters
    json_and_par_starter: 'id3a-rams2_nf*'
    target_vertical_position: -0.075 # At what position along the rotation axis was this data taken?  This defines what set of scans is pulled from the metadata.  
    vertical_motor_name: 'ramsz' # What is the name of the motor used to translate the sample along the rotation axis?
    
    # Load images directly
    data_folders: [13,14,15,16]
    stem: nf_
    stem_digits: 5
    goodstart: 3885
    nframes_per_folder: 360

  # Image cleaning routine
  processing:
    # Dynamic darkfield generation
    omega_kernel_size: 50 # Frames - 10 degs worth of frames is a good place to start

    # Global image threshold
    threshold: 1 # Applied as uint in addition to darkfield

    # Which routine to use - Only the parameters for chosen routine will be pulled
    routine_choice: 0 # 0 = gaussian blurring, 1 = dilation/errosion, 2 = non-local means, None does not binarize
    
    # Gaussian Cleaning Parameters
    sigma: 2.0 # Larger values begin to rapidly blur images
    gaussian_binarization_threshold: 3.0 # Images are floats when this is applied

    # Erosion/Dilation Parameters
    num_errosions: 3 # General practice, num_errosions >= num_dilations
    num_dilations: 2
    erosion_dilation_binarization_threshold: 5 # Images are uints when this is applied

    # Non-Local Means Cleaning Parameters
    patch_size: 3
    patch_distance: 5
    NLM_binarization_threshold: 10 # Images are floats when this is applied

    # Small object removal
    small_object_size: 200 # Number of pixels or None to remove nothing

    # Omega dilation
    dilate_omega: 0 # 0 or 1 - Dilate the binarized image stack in omega

NF_reconstruction:
  tomography:
    mask_filepath: /this/is/my/path # Absolute path or leave empty to not use a mask
    use_single_layer: False # True uses the center mask layer for all vertical positions
    vertical_motor_position: 0.0 # mm - What is the vertical motor's position?
  
  cross_sectional_dimensions: 1.4 # mm 
  voxel_spacing: 0.005  # mm - cubic voxel size for reconstruction
  desired_vertical_span: [-0.005, 0.005] # mm - span of vertical space to reconstruct

  beam_stop:
    beam_stop_filepath: # Path or leave blank to generate beam_stop with parameters
    # Below parameters will only be used if beam_stop_filepath: None
    beam_stop_vertical_center: 0.0  # mm - Measured from the origin of the detector paramters
    beam_stop_vertical_span: 0.3  # mm - Total span of the beam stop vertically

  # Brute force voxelwise orientation refinement - method not suggested
  # Set to true for missing grains, bound should be about half the orientation spacing
  misorientation: # You really don't want to be doing this... -REL
    use_misorientation: False # Did you mean False?  You probably meant False... -SEG
    bound: 0.6  # Degrees
    spacing: 0.1  # Degrees (will not be used if bound = 0.0)
    # Example: bound = 0.5, spacing = 0.25 will produce [-0.5, -0.25, 0.0, 0.25, 0.5]

  # Grain centroid cuttoff for serach
  centroid_serach_radius: 0.5 # mm
  expand_radius_confidence_threshold: 1.0
  
  missing_grains:
    # Data path to .npz of reconstructed data
    reconstructed_data_path: '/your/path/here/sample_reconstruction.npz'
    # Spacing between orientations used in serach
    ori_grid_spacing: 10.0 # Degrees - 1.0 is a good place to start
    # Where to look for new grains?
    confidence_threshold: 0.6 # Anything less than this will be looked at for new grains
    low_confidence_sparsing: 0 # 0 will take all voxels, 1 will take about half, 2 about a quarter - uses a sparse regular grid - Up to you, 0 has the best chance of finding all missing grains
    errode_free_surface: 1 # NF is poor at the surface already, removes the free surface of your tomo mask from the search space - 1 is suggested
    # Define a cutoff value for when to switch to a brute force
    coord_cutoff_scale: 0.15 # Once we only have coord_cutoff_scale*100 % voxels left to look at we transition to brute search of each voxel - its quicker - 0.15 is good
    iter_cutoff: 10 # If we don't find a grain after iter_cutoff iterations we break and go straight to searching all voxels - 10 is good but you may need more if you have a poor starting reconstruction
    # Re-rerun and save reconstruction
    re_run_and_save: 1 # If 1 this will re-run the full reconstruction with all grains and save an npz + paraview file (else put 0)
    


multiprocessing:
  num_cpus: 128 # Number of threads to use [all = os.cpu_count(), half = os.cpu_count()/2 (default), negative number = os.cpu_count()-num, positive number = num]
  chunk_size: -1 # Use -1 if you wish automatic chunk size calculation
  # RAM_set: True  # if True, manually set max amount of ram
  # max_RAM: 256  # only used if RAM_set is true. in GB
  check: None
  limit: None
  generate: None


